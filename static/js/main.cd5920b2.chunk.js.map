{"version":3,"sources":["auth/auth.ts","state.ts","store.ts","Frame.tsx","Controls.tsx","Search.tsx","Summary.tsx","Nav.tsx","auth/LogIn.tsx","auth/LogOut.tsx","App.tsx","reportWebVitals.ts","apiConfig.ts","index.tsx","saga.ts"],"names":["makeAuthClient","createAuth0Client","domain","client_id","process","redirect_uri","audience","getCurrentUser","a","authClient","getUser","user","undefined","getTokenSilently","authToken","name","picture","permissions","decodeToken","raw","payload","decode","initialAppState","images","map","img","url","rotation","index","reducer","state","action","type","idx","inBound","length","selectCurrentImage","connect","props","image","src","style","transform","borderWidth","borderStyle","alt","rotateImage","next","prev","loadImages","term","size","useParams","useEffect","className","onClick","validateTerm","gross","str","includes","trim","Search","appHistory","useHistory","useForm","handleSubmit","formState","register","control","errors","onSubmit","data","push","FormControl","fullWidth","margin","Typography","variant","defaultValue","rules","required","minLength","validate","render","field","TextField","FormHelperText","message","Select","native","value","Button","color","Summary","to","location","useLocation","Tabs","pathname","split","Tab","label","disabled","href","LogIn","loginWithRedirect","LogInCallback","loadUser","history","useState","error","setError","window","replaceState","handleRedirectCallback","then","catch","err","LogOut","logout","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","makeUrl","encodeURIComponent","fetch","headers","Authorization","response","json","apiConfig","Sentry","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","store","sagaMiddleware","createSagaMiddleware","createStore","composeWithDevTools","applyMiddleware","imageSaga","rootSaga","call","loadFromPixa","put","hits","h","webformatURL","largeImageURL","previewURL","takeLatest","makeImagesSaga","run","createStoreWithApiConfig","ReactDOM","StrictMode","borderColour","document","getElementById"],"mappings":"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","file":"static/js/main.cd5920b2.chunk.js","sourcesContent":["import createAuth0Client, { User } from \"@auth0/auth0-spa-js\";\nimport {decode} from 'jsonwebtoken';\n\nexport const makeAuthClient = () => createAuth0Client({\n    domain: 'hacks.au.auth0.com',\n    client_id: process.env.REACT_APP_AUTH_CLIENT_ID!,\n    redirect_uri: process.env.REACT_APP_AUTH_REDIRECT_URI,\n    audience: process.env.REACT_APP_AUTH_AUDIENCE\n});\n\nexport async function getCurrentUser(): Promise<AppUser | undefined> {\n    const authClient = await makeAuthClient();\n    const user = await authClient.getUser();\n    if (user == null) return undefined;\n\n    const authToken = await authClient.getTokenSilently();\n    return {\n        name: user.name ?? 'Unnamed',\n        picture: user.picture,\n        permissions: decodeToken(authToken),\n        authToken,\n    }\n}\nexport type Permission = 'photo:search' | 'photo:view' | 'photo:rotate';\nexport type AppUser = {\n    name: string,\n    picture?: string,\n    permissions: Permission[],\n    authToken: string,\n}\n\nfunction decodeToken(raw?: string): Permission[] {\n    const payload = decode(raw ?? '');\n    if (payload == null || typeof payload === 'string') {\n        return [];\n    }\n\n    return (payload ?? {}).permissions;\n}","import { AppUser } from \"./auth/auth\";\n\nexport type ImageSize = 'preview' | 'web' | 'large';\nexport type RotatedImage = { url: string; rotation: number };\nexport type AppState = { \n  images: RotatedImage[], \n  index: number,\n  user?: AppUser\n};\n\nconst images: RotatedImage[] = [\n    'https://pixabay.com/get/ga318fb8d1c3715c18097c4ad946803440a20b71426f074669ad38ae61a09c3ee1208741c4e9f3737faaa0e518ffd5c2b193167fefdf50d090cf1fad1a4ad4d3c_640.jpg',\n    'https://pixabay.com/get/ge1fa64bb0436c6ea7e582e146c576d4326b604bf9f097c983801d168bccc221f3783292264980044dbf31a10c7cfd3227958468ccd8ccf9d149e75e8ee1319ca_640.jpg',\n    'https://pixabay.com/get/g5f4291bfdb57cfad4e5d31219c9e866f216bb8d154036bef29bd09ee65081380b00b958364f9338f9ba28f75b5fa4008_640.jpg'\n  ].map(img => ({ url: img, rotation: 0 }));\n  \nexport const initialAppState: AppState = {\n    images,\n    index: 0\n};\n  ","import { applyMiddleware, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { ApiConfig } from \"./apiConfig\";\nimport { AppUser } from \"./auth/auth\";\nimport { makeImagesSaga } from \"./saga\";\nimport { initialAppState, AppState, ImageSize, RotatedImage } from \"./state\";\n\nexport function createStoreWithApiConfig(apiConfig: ApiConfig) {\n    const sagaMiddleware = createSagaMiddleware()\n    const store = createStore(\n        reducer,\n        initialAppState,\n        composeWithDevTools(applyMiddleware(sagaMiddleware)));\n\n    const imageSaga = makeImagesSaga(apiConfig);\n    sagaMiddleware.run(imageSaga);\n\n    return store;\n}\n\ntype AllActions = RotateImageAction \n    | SetImagesAction \n    | NextImageAction \n    | PrevImageAction \n    | SetAppUserAction;\n\n// (State, Action) -> State\nfunction reducer(\n    state: AppState = initialAppState, \n    action: AllActions\n): AppState {\n    switch (action.type) {\n        case 'rotateImage': \n            return { \n                ...state, \n                images: state.images.map(\n                    (img, idx) => idx === inBound(state.index, state.images.length) \n                        ? { ...img, rotation: img.rotation + action.payload } \n                        : img)\n            }\n        case 'setImages':\n            return {\n                ...state,\n                index: 0,\n                images: action.payload\n            };\n        case 'nextImage': \n            return {\n                ...state,\n                index: state.index + 1\n            };\n        case 'prevImage': \n            return {\n                ...state,\n                index: state.index - 1\n            };\n        case 'setAppUser':\n            return {\n                ...state,\n                user: action.payload\n            };\n        default: return state;\n    }\n}\n\nexport function selectCurrentImage(state: AppState): RotatedImage {\n    return state.images[inBound(state.index, state.images.length)] \n        ?? { url: undefined, rotation: 45 };\n}\n\nexport type RotateImageAction = {\n    type: 'rotateImage',\n    payload: number,\n};\n\nexport type NextImageAction = {\n    type: 'nextImage'\n};\n\nexport type PrevImageAction = {\n    type: 'prevImage'\n};\n\nexport type LoadImagesAction = {\n    type: 'loadImages',\n    payload: { term: string, size: ImageSize },\n};\n\nexport type SetImagesAction = {\n    type: 'setImages',\n    payload: RotatedImage[],\n};\n\nexport type SetAppUserAction = {\n    type: 'setAppUser',\n    payload: AppUser\n}\n\nexport type LoadUserAction = {\n    type: 'loadUser'\n}\n\nfunction inBound(idx: number, length: number): number {\n    return ((idx % length) + length) % length;\n  }\n\n","import { connect } from \"react-redux\";\nimport { RotatedImage, AppState } from \"./state\";\nimport { selectCurrentImage } from \"./store\";\n\ntype FrameProps = { \n  image: RotatedImage\n};\n\nconst Frame = (props: FrameProps) => {\n\n  return props.image.url ? (\n    <img src={ props.image.url } \n      style={ { \n        transform: `rotate(${props.image.rotation}deg)`, \n        borderWidth: '2px', \n        borderStyle: \"solid\"\n      } } \n      alt=\"logo\" />\n  ) : null;\n}\n\nfunction mapStateToProps(state: AppState): FrameProps {\n  return {\n    'image': selectCurrentImage(state)\n  };\n}\n\nexport default connect(mapStateToProps)(Frame);\n\n","import { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { RouteParam } from \"./App\";\nimport { ImageSize } from \"./state\";\nimport { LoadImagesAction, NextImageAction, PrevImageAction, RotateImageAction } from \"./store\";\n\ntype ControlsProps = {\n    prev: () => void,\n    rotateImage: () => void,\n    next: () => void,\n    loadImages: (term: string, size: ImageSize) => void\n}\n  \nconst Controls = (props: ControlsProps) => {\n    const { rotateImage, prev, next } = props;\n    const { term, size } = useParams<RouteParam>();  \n  \n    useEffect(() => {\n        props.loadImages(term, size);\n    }, [term, size]);\n    return (\n        <div className=\"image-controls\">\n            <button onClick={prev}>Previous</button>\n            <button onClick={rotateImage}>Rotate</button>\n            <button onClick={next}>Next</button>\n        </div>\n    );\n};\n\nconst mapDispatchToProps: ControlsProps = {\n    rotateImage: () => ({ 'type': 'rotateImage', payload: 15 } as RotateImageAction),\n    next: () => ({ type: 'nextImage' } as NextImageAction),\n    prev: () => ({ type: 'prevImage' } as PrevImageAction),\n    loadImages: (term: string, size: ImageSize) => ({ type: 'loadImages', payload: { size, term } } as LoadImagesAction)\n};\n\nexport default connect(null, mapDispatchToProps)(Controls);","import { Button, FormControl, FormHelperText, makeStyles, Select, TextField, Typography } from \"@material-ui/core\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router\";\nimport { ImageSize } from \"./state\";\n\ntype Props = {\n};\n\ntype SearchForm = {\n    term: string,\n    size: ImageSize\n}\n\nconst validateTerm = {\n    gross: (str: string) => ['slime', 'slug'].includes(str?.trim() ?? '') ? 'No gross stuff please' : undefined,\n};\n\nfunction Search(props: Props) {\n    const appHistory = useHistory();\n    const { handleSubmit, register, formState, control } = useForm<SearchForm>();\n    const onSubmit = (data: SearchForm) => appHistory.push(`/photos/${data.term}/${data.size}`);\n    const errors = formState.errors;\n\n    return <form onSubmit={handleSubmit(onSubmit)} className=\"search-form\">\n            <FormControl fullWidth margin=\"normal\">\n                <Typography variant=\"h5\">Search for:</Typography>\n                <Controller\n                    name=\"term\" \n                    control={control}\n                    defaultValue=\"\"\n                    rules={ \n                        {\n                            required: true, \n                            minLength: 3,\n                            validate: validateTerm\n                        }\n                    }\n                    render={({ field }) => <TextField\n                        {...field} \n                        /> \n                    }\n                />\n                <FormHelperText>\n                    {errors.term?.message ? <>{errors.term?.message}</> : undefined}\n                    {errors.term?.type === 'minLength' && <>Term must be at least 3 characters</>}\n                    {errors.term?.type === 'required' && <>Term is required</>}\n                </FormHelperText>\n            </FormControl>\n            <FormControl fullWidth margin=\"normal\">\n                <Typography variant=\"h5\">Image size:</Typography>\n                <Controller\n                    name=\"size\"\n                    rules={{required: true}}\n                    defaultValue=\"web\"\n                    control={control}\n                    render={({ field }) => <Select\n                        native \n                        {...field}>\n                        <option value=\"preview\">preview</option>\n                        <option value=\"web\">web</option>\n                        <option value=\"large\">large</option>\n                    </Select>\n                    }\n                />\n            </FormControl>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">Search</Button>\n        </form>;\n}\n\nexport default Search;\n","import React from \"react\";\nimport { useParams } from \"react-router\"\nimport { Link } from \"react-router-dom\";\nimport { RouteParam } from \"./App\";\n\nexport const Summary = () => {\n\n    const { term } = useParams<RouteParam>();\n\n    return <>\n        <p>You searched for <b>{term}</b> </p>\n        <Link to=\"/search\">Search for something else </Link>\n    </>;\n}","import { User } from \"@auth0/auth0-spa-js\";\nimport { Tabs, Tab } from \"@material-ui/core\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { useLocation } from \"react-router\";\nimport { useHistory } from \"react-router-dom\";\nimport { AppUser } from \"./auth/auth\";\nimport { AppState } from \"./state\";\n\nconst Nav = ({ user }: { user?: AppUser }) => {\n    const location = useLocation();\n    const appHistory = useHistory();\n\n    const permissions = user?.permissions ?? [];\n\n    return (\n        <Tabs value={location.pathname.split('/')[1] ?? 'search'}>\n            {\n                permissions.includes('photo:search')\n                ? <Tab label=\"Search\" value={'search'} onClick={() => appHistory.push('/search')} />\n                : null\n            }\n            {\n                permissions.includes('photo:view')\n                ? <Tab label=\"Photos\" value={'photos'} disabled />\n                : null\n            }\n            {\n                user != null \n                ? <Tab \n                    label={ \n                        <div className=\"user-profile\">\n                            <img src={user.picture} className=\"user-picture\" alt={user.name} />\n                            <a href=\"#\" onClick={() => appHistory.push('/logout')}>Log out</a>\n                        </div>\n                    }/>\n                : <Tab label=\"Log in\" value={'login'} onClick={() => appHistory.push('/login')}></Tab>\n            }\n        </Tabs>\n    );\n}\n\nexport default connect((state: AppState) => ({ user: state.user }))(Nav);","import { AuthenticationError } from \"@auth0/auth0-spa-js\";\nimport { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport { AppState } from \"../state\";\nimport { LoadUserAction } from \"../store\";\nimport { AppUser, makeAuthClient } from \"./auth\";\n\nexport const LogIn = () => {\n    useEffect(() => {\n        (async () => {\n            const authClient = await makeAuthClient();\n            await authClient.loginWithRedirect();\n        })();\n    }, []);\n\n    return <p>Redirecting to log in</p>;\n};\n\ntype Props = { user?: AppUser, loadUser: () => LoadUserAction };\nconst LogInCallbackInner = ({ loadUser, user }: Props) => {\n    const history = useHistory();\n    const location = useLocation();\n    const [error, setError] = useState<Error | null>(null);\n\n    useEffect(() => {\n        if (user != null) {\n            window.history.replaceState(null, '', `/#/${location.pathname}`);\n            history.push('/search');\n            return;\n        }\n    }, [user]);\n\n    useEffect(() => {        \n        (async () => {\n            const authClient = await makeAuthClient();\n            authClient.handleRedirectCallback()\n                .then(() => {\n                    loadUser();\n                })\n                .catch((err: AuthenticationError) => setError(err));\n        })();\n    }, []);\n\n    return error \n        ? <p>Log in failed. Error: {error.message}</p> \n        : <p>\n            You have logged in. \n            Click <Link to=\"/search\">here</Link> to search for photos\n        </p>\n};\n\nexport const LogInCallback = connect((state: AppState) => ({\n    user: state.user\n}), {\n    loadUser: () => ({ type: 'loadUser' }) as LoadUserAction\n})(LogInCallbackInner);","import { useEffect } from \"react\";\nimport { makeAuthClient } from \"./auth\";\n\nexport const LogOut = () => {\n    useEffect(() => { \n        (async () => {\n            const authClient = await makeAuthClient();\n            authClient.logout();\n        })();\n    }, []);\n\n    return <div>Logging out</div>;\n};","import { connect } from 'react-redux';\nimport './App.css';\nimport { LoadImagesAction, LoadUserAction } from './store';\nimport Frame from './Frame';\nimport Controls from './Controls';\nimport Frame2 from './Frame2';\nimport React, { useEffect, useState } from 'react';\nimport Search from './Search';\nimport { Route, BrowserRouter as Router, Switch, Link, HashRouter } from 'react-router-dom';\nimport { appHistory } from './history';\nimport { Summary } from './Summary';\nimport { Grid, Tab, Tabs } from '@material-ui/core';\nimport Nav from './Nav';\nimport { AppState, ImageSize } from './state';\nimport { LogIn, LogInCallback } from './auth/LogIn';\nimport { LogOut } from './auth/LogOut';\nimport { AppUser, getCurrentUser } from './auth/auth';\n\ntype Props = {\n  borderColour: 'blue' | 'red',\n  loadImages: () => LoadImagesAction\n  loadUser: () => LoadUserAction,\n  user?: AppUser\n};\n\nexport type RouteParam = { term: string, size: ImageSize };\n\nfunction App({ user, loadUser }: Props) {\n  useEffect(() => { loadUser(); }, []);\n  \n  return (\n      <HashRouter>\n        <Nav />\n        <Switch>\n          <Route path=\"/login/callback\">\n            <LogInCallback />\n          </Route>\n          <Route path=\"/login\">\n            <LogIn />\n          </Route>\n          <Route path=\"/logout/callback\">\n            You have logged out\n          </Route>\n          <Route path=\"/logout\">\n            <LogOut />\n          </Route>\n          <Route path=\"/photos/:term/:size\"\n            render={props => \n              (user?.permissions ?? []).includes('photo:view')\n              ? (<>\n                  <Frame />\n                  <Controls />\n                  <Summary />\n                </>)\n              : <div>You don't have permission to view photos</div>\n            }>\n          </Route>\n          <Route path=\"/search\"\n            render={props => \n              (user?.permissions ?? []).includes('photo:search')\n              ? <Search />\n              : <div>You don't have permission to search photos</div>\n            }>\n          </Route>\n          <Route path=\"*\">\n            Nothing to see here.\n          </Route>\n        </Switch>\n      </HashRouter>\n  );\n}\n\nexport default connect((state: AppState) => ({\n  user: state.user\n}), {\n  loadUser: () => ({ type: 'loadUser' as const }) as LoadUserAction,\n  loadImages: () => ({ type: 'loadImages' as const, payload: { term: 'tiger', size: 'preview' } } as LoadImagesAction)\n})(App);","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { AppUser, getCurrentUser } from \"./auth/auth\";\nimport { ImageSize } from \"./state\";\n\nexport type PixaResponse = { \n    hits: {\n        webformatURL: string,\n        previewURL: string,\n        largeImageURL: string,\n    }[] \n};\n\nconst apiKey = '18049587-99bf6238de19f175bd7defcf8';\nconst makeUrl = (term: string) => `http://localhost:8080/photos/${encodeURIComponent(term)}`;\n\nexport type ApiConfig = {\n    loadImages: (term: string) => Promise<PixaResponse>;\n    loadUser: () => Promise<AppUser | undefined>;\n};\n\nasync function loadImages(term: string): Promise<PixaResponse> {\n    const user = await getCurrentUser();\n    const response = await fetch(makeUrl(term), { headers: { Authorization: `Bearer ${user?.authToken!}` } });\n    const json: PixaResponse = await response.json();\n\n    return json;\n}\n\nexport const apiConfig: ApiConfig = {\n    loadImages,\n    loadUser: getCurrentUser\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { createStoreWithApiConfig } from './store';\nimport { apiConfig } from './apiConfig';\n\nimport * as Sentry from '@sentry/react';\nimport { Integrations } from \"@sentry/tracing\";\n\nSentry.init({\n  dsn: \"https://aa0edea63055490f9f55e6cbe7fc9a7b@o913027.ingest.sentry.io/5850497\",\n  integrations: [new Integrations.BrowserTracing()],\n\n  // Set tracesSampleRate to 1.0 to capture 100%\n  // of transactions for performance monitoring.\n  // We recommend adjusting this value in production\n  tracesSampleRate: 1.0,\n});\n\nconst store = createStoreWithApiConfig(apiConfig);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App borderColour=\"blue\" />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { call, put, takeLatest } from 'redux-saga/effects';\nimport { LoadImagesAction, LoadUserAction, SetAppUserAction, SetImagesAction } from './store';\nimport { RotatedImage } from './state';\nimport { ApiConfig } from './apiConfig';\nimport { AppUser, getCurrentUser } from './auth/auth';\n\nexport function makeImagesSaga(apiConfig: ApiConfig) {\n    function* loadImages(\n        action: LoadImagesAction\n    ): Generator<{}> {\n        const images = (yield call(loadFromPixa, action.payload)) as RotatedImage[];\n\n        yield put<SetImagesAction>({ type: 'setImages', payload: images });\n    }\n\n    function* loadUser(): Generator<{}> {\n        const user = (yield call(getCurrentUser)) as AppUser | undefined;\n        if (user != null) {\n            yield put<SetAppUserAction>({ type: 'setAppUser', payload: user });\n        }\n    }\n\n    async function loadFromPixa({ term, size }: LoadImagesAction['payload']): Promise<RotatedImage[]> {\n        const response = await apiConfig.loadImages(term);\n        const images: RotatedImage[] = response.hits.map(h => ({ \n            url: size === 'web' ? h.webformatURL :\n                    size === 'large' ? h.largeImageURL : h.previewURL, \n            rotation: 0 \n        }));\n\n        return images;\n    }\n\n    function* rootSaga() {\n        yield takeLatest<LoadImagesAction>('loadImages', loadImages);\n        yield takeLatest<LoadUserAction>('loadUser', loadUser);\n    };\n\n    return rootSaga;\n}"],"sourceRoot":""}